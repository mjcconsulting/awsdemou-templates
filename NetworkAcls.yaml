AWSTemplateFormatVersion: 2010-09-09
Description: NetworkAcls Template.
  This adds NetworkAcls to an existing Environment VPC. This Template is optional, and can be added (or removed) at any
  time to apply an additional layer of network security. This initially simply replicates the Default NetworkAcl, so we
  have a Template from which we can iterate to tighten security.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - VPCStackName
    ParameterLabels:
      VPCStackName:
        default: VPC Stack Name
Parameters:
  VPCStackName:
    Description: Name of the CloudFormation Stack containing the VPC
    Type: String
    MinLength: 3
    MaxLength: 64
    Default: VPC
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
Resources:
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCName}-PublicNetworkAcl
            - VPCName: !ImportValue
                Fn::Sub: ${VPCStackName}-VPCName
  PublicNetworkAclEntryInbound100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: false
      CidrBlock: 0.0.0.0/0
      RuleAction: allow
  PublicNetworkAclEntryOutbound100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      CidrBlock: 0.0.0.0/0
      RuleAction: allow
  PublicSubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-PublicSubnetA
      NetworkAclId: !Ref PublicNetworkAcl
  PublicSubnetBNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-PublicSubnetB
      NetworkAclId: !Ref PublicNetworkAcl
  PublicSubnetCNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-PublicSubnetC
      NetworkAclId: !Ref PublicNetworkAcl
  WebSubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-WebSubnetA
      NetworkAclId: !Ref PublicNetworkAcl
  WebSubnetBNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-WebSubnetB
      NetworkAclId: !Ref PublicNetworkAcl
  WebSubnetCNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-WebSubnetC
      NetworkAclId: !Ref PublicNetworkAcl
  PrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCName}-PrivateNetworkAcl
            - VPCName: !ImportValue
                Fn::Sub: ${VPCStackName}-VPCName
  PrivateNetworkAclEntryInbound100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: false
      CidrBlock: 0.0.0.0/0
      RuleAction: allow
  PrivateNetworkAclEntryOutbound100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      CidrBlock: 0.0.0.0/0
      RuleAction: allow
  ApplicationSubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-ApplicationSubnetA
      NetworkAclId: !Ref PrivateNetworkAcl
  ApplicationSubnetBNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-ApplicationSubnetB
      NetworkAclId: !Ref PrivateNetworkAcl
  ApplicationSubnetCNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-ApplicationSubnetC
      NetworkAclId: !Ref PrivateNetworkAcl
  DatabaseSubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-DatabaseSubnetA
      NetworkAclId: !Ref PrivateNetworkAcl
  DatabaseSubnetBNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-DatabaseSubnetB
      NetworkAclId: !Ref PrivateNetworkAcl
  DatabaseSubnetCNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-DatabaseSubnetC
      NetworkAclId: !Ref PrivateNetworkAcl
  EndpointNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCName}-EndpointNetworkAcl
            - VPCName: !ImportValue
                Fn::Sub: ${VPCStackName}-VPCName
  EndpointNetworkAclEntryInbound100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref EndpointNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: false
      CidrBlock: 0.0.0.0/0
      RuleAction: allow
  EndpointNetworkAclEntryOutbound100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref EndpointNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      CidrBlock: 0.0.0.0/0
      RuleAction: allow
  EndpointSubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-EndpointSubnetA
      NetworkAclId: !Ref EndpointNetworkAcl
  EndpointSubnetBNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-EndpointSubnetB
      NetworkAclId: !Ref EndpointNetworkAcl
  EndpointSubnetCNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-EndpointSubnetC
      NetworkAclId: !Ref EndpointNetworkAcl
  ManagementNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCName}-ManagementNetworkAcl
            - VPCName: !ImportValue
                Fn::Sub: ${VPCStackName}-VPCName
  ManagementNetworkAclEntryInbound100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref ManagementNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: false
      CidrBlock: 0.0.0.0/0
      RuleAction: allow
  ManagementNetworkAclEntryOutbound100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref ManagementNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      CidrBlock: 0.0.0.0/0
      RuleAction: allow
  ManagementSubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-ManagementSubnetA
      NetworkAclId: !Ref ManagementNetworkAcl
  ManagementSubnetBNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-ManagementSubnetB
      NetworkAclId: !Ref ManagementNetworkAcl
  ManagementSubnetCNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-ManagementSubnetC
      NetworkAclId: !Ref ManagementNetworkAcl
  GatewayNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCName}-GatewayNetworkAcl
            - VPCName: !ImportValue
                Fn::Sub: ${VPCStackName}-VPCName
  GatewayNetworkAclEntryInbound100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref GatewayNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: false
      CidrBlock: 0.0.0.0/0
      RuleAction: allow
  GatewayNetworkAclEntryOutbound100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref GatewayNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      CidrBlock: 0.0.0.0/0
      RuleAction: allow
  GatewaySubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-GatewaySubnetA
      NetworkAclId: !Ref GatewayNetworkAcl
  GatewaySubnetBNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-GatewaySubnetB
      NetworkAclId: !Ref GatewayNetworkAcl
  GatewaySubnetCNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-GatewaySubnetC
      NetworkAclId: !Ref GatewayNetworkAcl
